# whats going on here then... lets see now..
name: GitHub Actions Demo # easy, we gave it a name (Overall Workflow name)
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀 # the name of the individual workflow inside the overall workflow
on: [push] # When to trigger this workflow (the overall workflow since we're on that level in the YAML)
jobs: # each job has 'steps' to take
  Explore-GitHub-Actions: # this is basically the first job name
    runs-on: ubuntu-latest # specifies what it runs on
    steps: # steps to take in turn, note that seems include github vars (and could include secrets)
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event." # bunch of echo commands with vars nothing weird here. in a bit we'll name one of these run actions for giggle.
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
        run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code # actually names the step, previous run commands just shows the command for lack of a name
        uses: actions/checkout@v4 #imports the checkout@v4 action to use in this YAML script
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository # Again since this is named it clearly names the step as a list of files in the repo
        run: | # Had to google this, in summary multiline command, so observe new lines when processing. This a good point to edit the script to show understanding - which we'll do in a minute              
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

      # TODO: export the 'github' env var as far as reasonably possible. 